
-- Values
local playtimeString = "Playtime: "
local separator = false
local PlayerCount = "0/0"
local plrs = game.Players
local playerNames = {}
local startTime = tick()  -- Store the initial time
local UserInputService = game:GetService("UserInputService")
local GameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name

-- service
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Function to update player names
local function updatePlayerNames()
    playerNames = {}
    for _, player in ipairs(plrs:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
end

spawn(updatePlayerNames)

-- Fps
local UpdateFps = 0
local LastTime = tick()

RunService.RenderStepped:Connect(function()
    local DeltaTime = tick() - LastTime
    LastTime = tick()

    UpdateFps = math.floor(1 / DeltaTime)
end)

-- Update player count
local function updatePlayerCount()
    local currentPlayerCount = #plrs:GetPlayers()
    local maxPlayerCount = game.Players.MaxPlayers

    PlayerCount = currentPlayerCount .. "/" .. maxPlayerCount
end

-- Function to calculate playtime
local function calculatePlaytime()
    local currentTime = tick()
    local elapsedSeconds = currentTime - startTime

    local days = math.floor(elapsedSeconds / (24 * 60 * 60))
    local hours = math.floor((elapsedSeconds % (24 * 60 * 60)) / (60 * 60))
    local minutes = math.floor((elapsedSeconds % (60 * 60)) / 60)
    local seconds = math.floor(elapsedSeconds % 60)

    return days, hours, minutes, seconds
end

-- Detect input type
local function updateDeviceType()
    local lastInputType = UserInputService:GetLastInputType()
    if lastInputType == Enum.UserInputType.Touch or lastInputType == Enum.UserInputType.TouchFiveFinger or lastInputType == Enum.UserInputType.TouchTwoFinger then
        return "Mobile"
    else
        return "Computer"
    end
end
-- Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Unknownkellymc1/Orion/main/source')))()
local Sense = loadstring(game:HttpGet('https://sirius.menu/sense'))()

-- Window

local Window = OrionLib:MakeWindow({Name = "Reaper Hub : [" .. GameName .. "]", HidePremium = false, SaveConfig = false, ConfigFolder = "ReaperSaved"})

-- Tabs
local Tab1 = Window:MakeTab({Name = "Universal", Icon = "rbxassetid://7733954760", PremiumOnly = false})
local Tab2 = Window:MakeTab({Name = "Esp", Icon = "rbxassetid://7733774602", PremiumOnly = false})
local Tab3 = Window:MakeTab({Name = "AimBot", Icon = "rbxassetid://7733765307", PremiumOnly = false})
local Tab4 = Window:MakeTab({Name = "Info", Icon = "rbxassetid://7733964719", PremiumOnly = false})

-- [universal]--
local Character = Tab1:AddSection({
    Name = "Character:"
})

Tab1:AddButton({
    Name = "Reset Character",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character

        if character then
            character:BreakJoints()
        end
    end
})

spawn(updateStats)
updatePlayerNames()
local players = Tab1:AddSection({
    Name = "Players:"
})

local selectPlayers = Tab1:AddDropdown({
    Name = "Players",
    Default = "No Players",
    Options = playerNames,
    Callback = function(selectedplrName)
        selectedPlayer = plrs:FindFirstChild(selectedplrName)
        teleportButton:SetEnabled(true)
    end
})

local teleportButton 
teleportButton = Tab1:AddButton({
    Name = "Teleport",
    Enabled = false,
    Callback = function()
        if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local targetPosition = selectedPlayer.Character.HumanoidRootPart.Position
            local localPlayerRoot = plrs.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            
            if localPlayerRoot then
                localPlayerRoot.CFrame = CFrame.new(targetPosition)
            end
        end
    end
})

local copyUsernameButton = Tab1:AddButton({
    Name = "Copy Username",
    Callback = function()
        if selectedPlayer then
            setclipboard(selectedPlayer.Name)
        end
    end
})

local copyUserIdButton = Tab1:AddButton({
    Name = "Copy User ID",
    Callback = function()
        if selectedPlayer then
            setclipboard(tostring(selectedPlayer.UserId))
        end
    end
})

local Movements = Tab1:AddSection({
    Name = "Movements:"
})
local Slider1 = Tab1:AddSlider({
    Name = "Set Speed",
    Min = 0,
    Max = 1000,
    Default = 16,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Value",
    Callback = function(speed)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speed
    end
})

local Slider2 = Tab1:AddSlider({
    Name = "Set Jump Power",
    Min = 0,
    Max = 1000,
    Default = 50,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Value",
    Callback = function(jumpPower)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumpPower
    end
})

local Slider3 = Tab1:AddSlider({
    Name = "Set HipHeight",
    Min = 1.35,
    Max = 300,
    Default = 1.35,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 0.5,
    ValueName = "Value",
    Callback = function(hipHeight)
        game.Players.LocalPlayer.Character.Humanoid.HipHeight = hipHeight
    end
})

local Slider4 = Tab1:AddSlider({
    Name = "Set Gravity",
    Min = -100,
    Max = 500,
    Default = 196.2,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Value",
    Callback = function(Gravity)
        game.Workspace.Gravity = Gravity
    end
})

local ResetMovements = Tab1:AddSection({
    Name = "Resets Movements:"
})
Tab1:AddButton({
    Name = "Reset Speed",
    Callback = function()
        Slider1:Set(16)
    end
})

Tab1:AddButton({
    Name = "Reset Jump Power",
    Callback = function()
        Slider2:Set(50)
    end
})

Tab1:AddButton({
    Name = "Reset HipHeight",
    Callback = function()
        Slider3:Set(1.35)
    end
})
Tab1:AddButton({
    Name = "Reset Gravity",
    Callback = function()
        Slider4:Set(196.2)
    end
})


Tab1:AddButton({
    Name = "Reset all",
    Callback = function()
        Slider1:Set(16)
        Slider2:Set(50)
        Slider3:Set(1.35)
        Slider4:Set(196.2)
    end
})

local ToolGui = Tab1:AddSection({
    Name = "Tools Gui:"
})
Tab1:AddButton({
    Name = "Infinite Yield",
    Callback = function()	loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end    
})

Tab1:AddButton({
    Name = "Dex v4",
    Callback = function()
        getgenv().Key = "Bash"
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Hosvile/Refinement/main/MC%3AIY%20Dex",true))()
    end    
})

Tab1:AddButton({
    Name = "Remote Spy",
    Callback = function()	loadstring(game:HttpGet("https://raw.githubusercontent.com/REDzHUB/RS/main/SimpleSpyMobile"))()
    end    
})

-- [Esp]--
local Loader = Tab2:AddSection({
    Name = "Loader:"
})
local EspLoader = Tab2:AddButton({
    Name = "Load",
    Callback = function()
        if EspLoaded then
            OrionLib:MakeNotification({
                Name = "Esp",
                Content = "Already Loaded",
                Image = "rbxassetid://7733658504",
                Time = 5
            })
            return
        end

        Sense.Load()
        wait(1)

        Sense.teamSettings.enemy.tracerOutline = false
        Sense.teamSettings.friendly.tracerOutline = false
        Sense.teamSettings.enemy.chamsFillColor = { Color3.new(1, 0, 0), 0.5 }
        Sense.teamSettings.friendly.chamsFillColor = { Color3.new( 0, 0, 1), 0.5 }
        
        local Esp = Tab2:AddSection({
            Name = "Esp:"
        })

        local Toggle1 = Tab2:AddToggle({
            Name = "Enable Enemy",
            Default = false,
            Callback = function(A)
                Sense.teamSettings.enemy.enabled = A
            end
        })

         local Toggle1 = Tab2:AddToggle({
            Name = "Enable Teammate",
            Default = false,
            Callback = function(A2)
                Sense.teamSettings.friendly.enabled = A2
            end
        })


       local Visual = Tab2:AddSection({
       Name = "Visual:"
       })


        local ToggleBox = Tab2:AddToggle({
            Name = "Box",
            Default = false,
            Callback = function(B)
                Sense.teamSettings.enemy.box3d = B
                Sense.teamSettings.friendly.box3d = B
            end
        })

        local ToggleTracer = Tab2:AddToggle({
            Name = "Tracer",
            Default = false,
            Callback = function(C)
                Sense.teamSettings.enemy.tracer = C
                Sense.teamSettings.friendly.tracer = C
            end
        })


        local ToggleChams = Tab2:AddToggle({
            Name = "Chams",
            Default = false,
            Callback = function(D)
                Sense.teamSettings.enemy.chams = D
                Sense.teamSettings.friendly.chams = D
            end
        })


         local ToggleName = Tab2:AddToggle({
            Name = "NameShow",
            Default = false,
            Callback = function(E)
                Sense.teamSettings.enemy.name = E
                Sense.teamSettings.friendly.name = E
            end
        })

          local ToggleHealthbar = Tab2:AddToggle({
            Name = "Health Bar",
            Default = false,
            Callback = function(F)
                Sense.teamSettings.enemy.healthBar = F
                Sense.teamSettings.friendly.healthBar = F
            end
        })

        local Section7 = Tab2:AddSection({
            Name = "Colors:"
        })

        local Toggle99 = Tab2:AddToggle({
            Name = "Team Collor",
            Default = false,
            Callback = function(Z)
                Sense.sharedSettings.useTeamColor = Z
            end
        })

        local Section7 = Tab2:AddSection({
            Name = "Size:"
        })

        local Slider5 = Tab2:AddSlider({
            Name = "Textsize",
            Min = 0,
            Max = 100,
            Default = 13,
            Color = Color3.fromRGB(255, 255, 255),
            Increment = 1,
            ValueName = "Size",
            Callback = function(s)
                Sense.sharedSettings.textSize = s
            end
        })

        wait(0.1)

        OrionLib:MakeNotification({
            Name = "Esp Loader",
            Content = "Loaded",
            Image = "rbxassetid://7733919427",
            Time = 5
        })

        EspLoaded = true
    end
})

-- [Info]--
local Statistic = Tab4:AddSection({
       Name = "Statistic:"
       })
local FpsLabel = Tab4:AddLabel("Fps: " .. UpdateFps)
local CountPlayerLabel = Tab4:AddLabel("Players: " .. PlayerCount)
local PlaytimeLabel = Tab4:AddLabel("Playtime: ")
    local DeviceLabel = Tab4:AddLabel("Device: ")

local SpecialThx = Tab4:AddSection({
       Name = "Library:"
       })

Tab4:AddParagraph("Orion Library:","Orion Team")
Tab4:AddParagraph("Mobile suport:","Unknownkellymc1")
Tab4:AddParagraph("Esp Library:","Unknow")
Tab4:AddParagraph("AimBot Library:","Zeroox team")
-- Loops
while wait() do
    local deviceType = updateDeviceType()
    updatePlayerNames()
    updatePlayerCount()

    local days, hours, minutes, seconds = calculatePlaytime()
    FpsLabel:Set("FPS: " .. UpdateFps)
    wait(0.1)
    DeviceLabel:Set("Device: " .. deviceType)
    wait(0.1)
    CountPlayerLabel:Set("Player Count: " .. PlayerCount)
    wait(0.1)

    local playtimeString = "Playtime: "
    
    if days > 0 then
        playtimeString = playtimeString .. days .. " Days"
    end

    if hours > 0 or days > 0 then
        playtimeString = playtimeString .. (days > 0 and ", " or "") .. hours .. " Hours"
    end

    if minutes > 0 or hours > 0 or days > 0 then
        playtimeString = playtimeString .. ((hours > 0 or days > 0) and ", " or "") .. minutes .. " Minutes"
    end

    playtimeString = playtimeString .. ((minutes > 0 or hours > 0 or days > 0) and ", " or "") .. seconds .. " Seconds"
    PlaytimeLabel:Set(playtimeString)
end
